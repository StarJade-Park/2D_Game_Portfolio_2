#include "GShader.h"

char GShader::mShaderVerStr[256] = { NULL };

UINT GShader::GetFormatByteSize(DXGI_FORMAT _fmt)
{
	UINT size = 0;

	switch ( _fmt )
	{
	case DXGI_FORMAT_R32G32B32A32_TYPELESS:   FALL_THROUGH;
	case DXGI_FORMAT_R32G32B32A32_FLOAT:	  FALL_THROUGH;
	case DXGI_FORMAT_R32G32B32A32_UINT:		  FALL_THROUGH;
	case DXGI_FORMAT_R32G32B32A32_SINT:		  FALL_THROUGH;
		size = 16;							  
		break;								  
	case DXGI_FORMAT_R32G32B32_TYPELESS:	  FALL_THROUGH;
	case DXGI_FORMAT_R32G32B32_FLOAT:		  FALL_THROUGH;
	case DXGI_FORMAT_R32G32B32_UINT:		  FALL_THROUGH;
	case DXGI_FORMAT_R32G32B32_SINT:		  FALL_THROUGH;
		size = 12;							  
		break;								  
	case DXGI_FORMAT_R16G16B16A16_TYPELESS:	  FALL_THROUGH;
	case DXGI_FORMAT_R16G16B16A16_FLOAT:	  FALL_THROUGH;
	case DXGI_FORMAT_R16G16B16A16_UNORM:	  FALL_THROUGH;
	case DXGI_FORMAT_R16G16B16A16_UINT:		  FALL_THROUGH;
	case DXGI_FORMAT_R16G16B16A16_SNORM:	  FALL_THROUGH;
	case DXGI_FORMAT_R16G16B16A16_SINT:		  FALL_THROUGH;
	case DXGI_FORMAT_R32G32_TYPELESS:		  FALL_THROUGH;
	case DXGI_FORMAT_R32G32_FLOAT:			  FALL_THROUGH;
	case DXGI_FORMAT_R32G32_UINT:			  FALL_THROUGH;
	case DXGI_FORMAT_R32G32_SINT:			  FALL_THROUGH;
	case DXGI_FORMAT_R32G8X24_TYPELESS:		  FALL_THROUGH;
		size = 8;
		break;
	case DXGI_FORMAT_UNKNOWN:                 FALL_THROUGH;
	default:
		CRASH_PROG;
		OutputDebugStringW(L"ERR : DXGI_FORMAT_UNKNOWN");
		break;
	}

	return size;
}